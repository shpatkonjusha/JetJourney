package com.example.jetjourney.dtos;

import com.example.jetjourney.enums.FlightStatus;
import jakarta.validation.constraints.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
@Data
@NoArgsConstructor
@AllArgsConstructor
public class FlightDTO {

    private Long id; // No validation needed for ID (autogenerated by the database)

    @NotBlank(message = "Flight number is mandatory")
    @Size(min = 3, max = 10, message = "Flight number must be between 3 and 10 characters")
    private String flightNumber;

    @NotBlank(message = "Origin is mandatory")
    @Size(min = 3, max = 50, message = "Origin must be between 3 and 50 characters")
    private String origin;

    @NotBlank(message = "Destination is mandatory")
    @Size(min = 3, max = 50, message = "Destination must be between 3 and 50 characters")
    private String destination;

    @NotNull(message = "Departure time is mandatory")
    @Future(message = "Departure time must be in the future")
    private LocalDateTime departureTime;

    @NotNull(message = "Arrival time is mandatory")
    @Future(message = "Arrival time must be in the future")
    private LocalDateTime arrivalTime;

    @Min(value = 1, message = "Available seats must be at least 1")
    @Max(value = 500, message = "Available seats cannot exceed 500")
    private int availableSeats;

    @NotNull(message = "Flight status is mandatory")
    private FlightStatus status; // Enum for flight status (e.g., ON_TIME, DELAYED, CANCELED)
}



